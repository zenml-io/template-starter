name: 'Run STARTER template tests'
inputs:
  stack-name:
    description: 'Name of ZenML stack to build (see `tests/conftest.py:configure_stack()`)'
    type: string
    required: true
  ref-zenml:
    description: 'Ref of ZenML package'
    type: string
    required: false
    default: ''
  ref-template:
    description: 'Ref of this template repo'
    type: string
    required: false
    default: ''
  python-version:
    description: 'Python version'
    type: string
    required: false
    default: '3.9'

runs:
  using: "composite"
  steps:
  - name: Check out repository code
    uses: actions/checkout@v3
    with:
      repository: zenml-io/zenml-project-templates
      ref: ${{ inputs.ref-template }}
      path: ./local_checkout

  - name: Set up Python
    uses: actions/setup-python@v4
    with:
      python-version: ${{ inputs.python-version }}

  - name: Configure git (non-Windows)
    if: ${{ runner.os != 'Windows' }}
    shell: bash
    run: |
      git config --global user.email "info@zenml.io"
      git config --global user.name "ZenML GmbH"

  - name: Configure git (Windows)
    if: ${{ runner.os == 'Windows' }}
    shell: bash
    run: |
      "C:\Program Files\Git\bin\git.exe" config --global user.email "info@zenml.io"
      "C:\Program Files\Git\bin\git.exe" config --global user.name "ZenML GmbH"

  - name: Install  wheel
    shell: bash
    run: |
      pip install wheel uv

  - name: Install setuptools on Python 3.12
    if: ${{ inputs.python-version == '3.12' }}
    shell: bash
    run: pip install setuptools

  - name: Install ZenML
    if: ${{ inputs.ref-zenml != '' }}
    shell: bash
    run: |
      uv pip install --system "git+https://github.com/zenml-io/zenml.git@${{ inputs.ref-zenml }}" "zenml[server]@git+https://github.com/zenml-io/zenml.git@${{ inputs.ref-zenml }}"

  - name: Install ZenML
    if: ${{ inputs.ref-zenml == '' }}
    shell: bash
    run: |
      uv pip install --system zenml "zenml[server]"

  - name: Concatenate requirements
    shell: bash
    run: |
      zenml integration export-requirements -o ./local_checkout/integration-requirements.txt sklearn pandas
      cat ./local_checkout/requirements.txt ./local_checkout/test-requirements.txt ./local_checkout/integration-requirements.txt >> ./local_checkout/all-requirements.txt

  - name: Install requirements
    shell: bash
    run: |
      uv pip install --system -r ./local_checkout/all-requirements.txt

  - name: Run pytests
    shell: bash
    env:
      ZENML_STACK_NAME: ${{ inputs.stack-name }}
    run: |
      pytest ./local_checkout/tests
